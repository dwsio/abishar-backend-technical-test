{
  "swagger": "2.0",
  "info": {
    "title": "transaction_api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ApiService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/transaction/health": {
      "get": {
        "summary": "Health Check",
        "description": "This API for check health server",
        "operationId": "ApiService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/transaction/multiple": {
      "post": {
        "summary": "Create Multiple Transaction API",
        "description": "This API for create multiple transaction",
        "operationId": "ApiService_CreateTransactionMultiple",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTransactionMultipleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTransactionMultipleRequest"
            }
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateTransactionMultipleRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TransactionData"
          }
        }
      }
    },
    "v1CreateTransactionMultipleResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1TransactionData": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "customerName": {
          "type": "string"
        },
        "quatity": {
          "type": "integer",
          "format": "int64"
        },
        "totalPrice": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
